# METADATA
# title :"EC2 LaunchWizard Security Groups"
# description: "Ensures security groups created by the EC2 launch wizard are not used"
# scope: package
# schemas:
# - input: schema.input
# related_resources:
# - https://docs.aws.amazon.com/launchwizard/latest/userguide/launch-wizard-sap-security-groups.html
# custom:
#   avd_id: AVD-AWS-0180
#   provider: aws
#   service:EC2
#   severity: LOW
#   short_code: launch-wizard-security-gro 
#   recommended_action: "Delete the launch wizard security group and replace it with a custom security group."
#   input:
#     selector:
#      - type: cloud
package builtin.aws.rds.aws0180

#function(cache, settings, callback) {
#        var results = [];
#        var source = {};
#        var regions = helpers.regions(settings);
#
#        async.each(regions.ec2, function(region, rcb){
#            var describeSecurityGroups = helpers.addSource(cache, source,
#                ['ec2', 'describeSecurityGroups', region]);
#
#            if (!describeSecurityGroups) return rcb();
#
#            if (describeSecurityGroups.err || !describeSecurityGroups.data) {
#                helpers.addResult(results, 3,
#                    'Unable to query for security groups: ' + helpers.addError(describeSecurityGroups), region);
#                return rcb();
#            }
#
#            if (!describeSecurityGroups.data.length) {
#                helpers.addResult(results, 0, 'No security groups found', region);
#                return rcb();
#            }
#
#            for (var s in describeSecurityGroups.data) {
#                var sg = describeSecurityGroups.data[s];
#                var resource = 'arn:aws:ec2:' + region + ':' + sg.OwnerId + ':security-group/' + sg.GroupId;
#
#                if (!sg.GroupName) {
#                    helpers.addResult(results, 2,
#                        'Unable to get group name of security group',
#                        region, resource);
#                    continue;
#                }
#                
#                if (sg.GroupName.toLowerCase().startsWith('launch-wizard')) {
#                    helpers.addResult(results, 2,
#                        'Security Group ' + sg.GroupName + ' was launched using EC2 launch wizard',
#                        region, resource);
#                } else {
#                    helpers.addResult(results, 0,
#                        'Security Group ' + sg.GroupName + ' was not launched using EC2 launch wizard',
#                        region, resource);
#                }
#            }
#
#            rcb();
#        }, function(){
#            callback(null, results, source);
#        });
#    }